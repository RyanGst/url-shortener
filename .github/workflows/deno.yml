# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will use Docker Compose to run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno CI with Docker

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]
  workflow_dispatch: 

permissions:
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      # Remove the Setup Deno step, as Deno is inside the container
      # - name: Setup Deno
      #   uses: denoland/setup-deno@v2
      #   with:
      #     deno-version: v2.x

      # Run linter using docker-compose
      - name: Run linter
        run: docker compose run --rm app deno lint

      # Run tests using docker-compose with specified permissions
      - name: Run tests
        run: docker compose run --rm app deno test --allow-net --allow-read --allow-env
  build-and-push-image:
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3

        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/ryangst/url-shortener:latest
            ghcr.io/ryangst/url-shortener:${{ github.sha }}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Stack Deploy
      uses: cssnr/stack-deploy-action@v1
      with:
        name: url-shortener
        file: docker-compose.yml
        host: url.unnamd.cloud
        user: deploy
        ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
